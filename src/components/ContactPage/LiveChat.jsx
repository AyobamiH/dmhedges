// /**
//  * This code was generated by Builder.io.
//  */
// import React, { useState } from 'react';
// import { motion, AnimatePresence } from 'framer-motion';

// const LiveChat = () => {
//   const [isOpen, setIsOpen] = useState(false);
//   const [messages, setMessages] = useState([]);
//   const [inputMessage, setInputMessage] = useState('');

//   const toggleChat = () => setIsOpen(!isOpen);

//   const handleSendMessage = (e) => {
//     e.preventDefault();
//     if (inputMessage.trim()) {
//       setMessages([...messages, { text: inputMessage, sender: 'user' }]);
//       setInputMessage('');
//       // Simulate AI response
//       setTimeout(() => {
//         setMessages(prevMessages => [...prevMessages, { text: "Thank you for your message. Our team will get back to you shortly.", sender: 'ai' }]);
//       }, 1000);
//     }
//   };

//   return (
//     <>
//       <motion.button
//         className="fixed bottom-4 right-4 bg-green-600 text-white p-4 rounded-full shadow-lg"
//         whileHover={{ scale: 1.1 }}
//         whileTap={{ scale: 0.9 }}
//         onClick={toggleChat}
//       >
//         <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
//           <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z" />
//         </svg>
//       </motion.button>

//       <AnimatePresence>
//         {isOpen && (
//           <motion.div
//             initial={{ opacity: 0, y: 100 }}
//             animate={{ opacity: 1, y: 0 }}
//             exit={{ opacity: 0, y: 100 }}
//             className="fixed bottom-20 right-4 w-80 bg-white rounded-lg shadow-xl overflow-hidden"
//           >
//             <div className="bg-green-600 text-white p-4">
//               <h3 className="text-lg font-semibold">Live Chat</h3>
//             </div>
//             <div className="h-80 overflow-y-auto p-4">
//               {messages.map((message, index) => (
//                 <div key={index} className={`mb-2 ${message.sender === 'user' ? 'text-right' : 'text-left'}`}>
//                   <span className={`inline-block p-2 rounded-lg ${message.sender === 'user' ? 'bg-green-100' : 'bg-gray-100'}`}>
//                     {message.text}
//                   </span>
//                 </div>
//               ))}
//             </div>
//             <form onSubmit={handleSendMessage} className="border-t p-4">
//               <div className="flex">
//                 <input
//                   type="text"
//                   value={inputMessage}
//                   onChange={(e) => setInputMessage(e.target.value)}
//                   placeholder="Type your message..."
//                   className="flex-grow px-3 py-2 border rounded-l-md focus:outline-none focus:ring-2






/**
 * This code was generated by Builder.io.
 */
import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

const LiveChat = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [messages, setMessages] = useState([]);
  const [inputMessage, setInputMessage] = useState('');

  const toggleChat = () => setIsOpen(!isOpen);

  const handleSendMessage = (e) => {
    e.preventDefault();
    if (inputMessage.trim()) {
      setMessages([...messages, { text: inputMessage, sender: 'user' }]);
      setInputMessage('');
      // Simulate AI response
      setTimeout(() => {
        setMessages(prevMessages => [...prevMessages, { text: "Thank you for your message. Our team will get back to you shortly.", sender: 'ai' }]);
      }, 1000);
    }
  };

  return (
    <>
      <motion.button
        className="fixed bottom-4 right-4 bg-green-600 text-white p-4 rounded-full shadow-lg"
        whileHover={{ scale: 1.1 }}
        whileTap={{ scale: 0.9 }}
        onClick={toggleChat}
      >
        <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z" />
        </svg>
      </motion.button>

      <AnimatePresence>
        {isOpen && (
          <motion.div
            initial={{ opacity: 0, y: 100 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 100 }}
            className="fixed bottom-20 right-4 w-80 bg-white rounded-lg shadow-xl overflow-hidden"
          >
            <div className="bg-green-600 text-white p-4">
              <h3 className="text-lg font-semibold">Live Chat</h3>
            </div>
            <div className="h-80 overflow-y-auto p-4">
              {messages.map((message, index) => (
                <div key={index} className={`mb-2 ${message.sender === 'user' ? 'text-right' : 'text-left'}`}>
                  <span className={`inline-block p-2 rounded-lg ${message.sender === 'user' ? 'bg-green-100' : 'bg-gray-100'}`}>
                    {message.text}
                  </span>
                </div>
              ))}
            </div>
            <form onSubmit={handleSendMessage} className="border-t p-4">
              <div className="flex">
                <input
                  type="text"
                  value={inputMessage}
                  onChange={(e) => setInputMessage(e.target.value)}
                  placeholder="Type your message..."
                  className="flex-grow px-3 py-2 border rounded-l-md focus:outline-none focus:ring-2 focus:ring-green-500"
                />
                <button type="submit" className="px-4 py-2 bg-green-600 text-white rounded-r-md">Send</button>
              </div>
            </form>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
};

export default LiveChat;
