/**
 * This code was generated by Builder.io.
 */
import React from 'react';
import { render, screen, waitFor } from '@testing-library/react';
import TestimonialsPage from './TestimonialsPage';

jest.mock('./TestimonialCard', () => ({ testimonial }) => (
  <div data-testid="testimonial-card">{testimonial.name}</div>
));

jest.mock('./RatingSummary', () => ({ overallRating }) => (
  <div data-testid="rating-summary">Overall Rating: {overallRating}</div>
));

jest.mock('./ReviewForm', () => () => <div data-testid="review-form">Review Form</div>);

describe('TestimonialsPage', () => {
  beforeEach(() => {
    jest.spyOn(global, 'fetch').mockResolvedValue({
      json: jest.fn().mockResolvedValue({
        testimonials: [
          { id: 1, name: 'John Doe' },
          { id: 2, name: 'Jane Smith' },
        ],
        overallRating: 4.5,
      }),
    });
  });

  afterEach(() => {
    jest.restoreAllMocks();
  });

  it('renders testimonials page with title', async () => {
    render(<TestimonialsPage />);
    expect(screen.getByText('Customer Testimonials')).toBeInTheDocument();
  });

  it('fetches and displays testimonials', async () => {
    render(<TestimonialsPage />);
    await waitFor(() => {
      expect(screen.getAllByTestId('testimonial-card')).toHaveLength(2);
      expect(screen.getByText('John Doe')).toBeInTheDocument();
      expect(screen.getByText('Jane Smith')).toBeInTheDocument();
    });
  });

  it('displays overall rating summary', async () => {
    render(<TestimonialsPage />);
    await waitFor(() => {
      expect(screen.getByTestId('rating-summary')).toBeInTheDocument();
      expect(screen.getByText